#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

{
  "input":[
    {
      "type":"storm_drpc",
      "rowtype":"service",
      "path":"/logs/drpc.log"
    },
    {
      "type":"storm_logviewer",
      "rowtype":"service",
      "path":"/logs/logviewer.log"
    },
    {
      "type":"storm_nimbus",
      "rowtype":"service",
      "path":"/logs/nimbus.log"
    },
    {
      "type":"storm_supervisor",
      "rowtype":"service",
      "path":"/logs/supervisor.log"
    },
    {
      "type":"storm_ui",
      "rowtype":"service",
      "path":"/logs/ui.log"
    },
    {
      "type":"storm_worker",
      "rowtype":"service",
      "path":"/logs/workers-artifacts/*/*/worker.log",
      "init_default_fields": "true"
    }
  ],
  "filter":[
    {
      "filter":"grok",
      "sort_order": 1,
      "conditions":{
        "fields":{
          "type":[
            "storm_drpc",
            "storm_logviewer",
            "storm_nimbus",
            "storm_supervisor",
            "storm_ui",
            "storm_worker"
          ]
        }
      },
      "log4j_format":"",
      "deep_extract": "true",
      "multiline_pattern":"^(%{TIMESTAMP_ISO8601:logtime})",
      "message_pattern":"(?m)^%{TIMESTAMP_ISO8601:logtime}\\s%{JAVACLASS:logger_name}\\s(%{STORM_THREAD_NAME:thread_name}|%{DATA:thread_name})\\s\\[%{LOGLEVEL:level}\\]\\s%{GREEDYDATA:log_message}",
      "post_map_values":{
        "logtime":{
          "map_date":{
            "target_date_pattern":"yyyy-MM-dd HH:mm:ss.SSS"
          }
        }
      }
    },
    {
      "filter":"grok",
      "sort_order": 2,
      "conditions":{
        "fields":{
          "type":[
            "storm_worker"
          ]
        }
      },
      "source_field": "path",
      "deep_extract": "true",
      "remove_source_field": "false",
      "message_pattern":"/logs/workers-artifacts/%{STORM_TOPOLOGY_ID:storm_topology_id}/%{DATA:storm_worker_port}/worker\\.log"
    }
  ]
}
